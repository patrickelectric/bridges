name: Check, build and deploy!

on:
  push:
  pull_request:
    branches: [master]

jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Check code style
        run: cargo fmt -- --check

  build:
    name: Build and deploy
    needs: [formatting-check]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
          TARGET: x86_64-apple-darwin

        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: ubuntu-latest
          TARGET: aarch64-unknown-linux-musl

        - os: ubuntu-latest
          TARGET: arm-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: armv7-unknown-linux-musleabihf

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
      - name: Building ${{ matrix.TARGET }}
        run: echo "We need a run for a step :)"

      - uses: actions/checkout@master

      - uses: actions-rs/toolchain@v1.0.1
        with:
          toolchain: stable
          target: ${{ matrix.TARGET }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target=${{ matrix.TARGET }}

      - name: Rename
        run: cp target/${{ matrix.TARGET }}/release/bridges${{ matrix.EXTENSION }} bridges-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

      - uses: actions/upload-artifact@master
        with:
          name: bridges-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          path: bridges-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

      - uses: svenstaro/upload-release-action@v2
        name: Upload binaries to release
        if: contains(github.ref, 'refs/tags')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bridges-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          asset_name: bridges-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          overwrite: true